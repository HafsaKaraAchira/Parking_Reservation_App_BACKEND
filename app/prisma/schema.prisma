generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Horaire {
  horaireID        Int       @id
  parkingID        Int?
  fermetureHoraire DateTime? @db.Date
  ouvertureHoraire DateTime? @db.Date
  day              DayType?
  Parking          Parking?  @relation(fields: [parkingID], references: [parkingID], onDelete: NoAction, onUpdate: NoAction, map: "Parking")
}

model Note {
  utilisateurID Int
  parkingID     Int
  note          Int?
  commentaire   String?
  Parking       Parking     @relation(fields: [parkingID], references: [parkingID], onDelete: NoAction, onUpdate: NoAction, map: "parkingID")
  Utilisateur   Utilisateur @relation(fields: [utilisateurID], references: [utilisateurID], onDelete: NoAction, onUpdate: NoAction, map: "UtilisateurID")

  @@id([utilisateurID, parkingID])
}

model Parking {
  parkingID     Int           @id
  photo         String?
  nom           String?
  commune       String?
  totalPlaces   Int?
  tarif         Float?        @db.Real
  longitude_    Float?        @map("longitude ") @db.Real
  latitude      Float?        @db.Real
  occupedPlaces Int?
  etat          EtatType?
  Horaire       Horaire[]
  Note          Note[]
  Reservation   Reservation[]
}

model Reservation {
  reservationID Int          @id
  utilisateurId Int?
  parkingID     Int?
  enter         String?
  sortie        String?
  date          DateTime?    @db.Date
  numPlace      Int?
  qrCode        Bytes?
  paiement      Float?       @db.Real
  Parking       Parking?     @relation(fields: [parkingID], references: [parkingID], onDelete: NoAction, onUpdate: NoAction, map: "parkingID")
  Utilisateur   Utilisateur? @relation(fields: [utilisateurId], references: [utilisateurID], onDelete: NoAction, onUpdate: NoAction, map: "utilisateurID")
}

model Utilisateur {
  utilisateurID Int           @id
  nom           String?
  prenom        String?
  email         String?
  telephone     BigInt?
  motDePasse    String?
  Note          Note[]
  Reservation   Reservation[]
}

enum DayType {
  samedi
  dimanche
  lundi
  mardi
  mercredi
  jeudi
  vendredi
}

enum EtatType {
  ouvert
  ferm_ @map("ferm√©")
}
